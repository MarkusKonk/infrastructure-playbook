# Certbot
certbot_virtualenv_package_name: python3-virtualenv
certbot_dns_provider: route53
certbot_auth_method: --standalone
certbot_domains: "{{ server_names }}"
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_share_key_users:
  - nginx

# AWS Credentials for certbot-route53
aws_cli_credentials:
  - access_key: "{{ aws_credentials.certbot.AWS_ACCESS_KEY }}"
    secret_key: "{{ aws_credentials.certbot.AWS_SECRET_KEY }}"
    homedir: /root
    owner: root
    group: root

# Nginx
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - dokku
nginx_conf_http:
  client_max_body_size: 1g
  proxy_cache_path: "/tmp/nginx-cache levels=1:2 keys_zone=STATIC:10m inactive=24h  max_size=1g"
  gzip: "on"
  gzip_proxied: any
  # The ngx_http_gzip_static_module module allows sending precompressed files with the “.gz” filename extension instead of regular files.
  gzip_static: "on"
  gzip_http_version: "1.1"
  gzip_disable: '"MSIE [1-6]\."'
  gzip_vary: "on"
  gzip_comp_level: 6
  gzip_types: |
      text/plain
      text/css
      text/xml
      text/javascript
      application/javascript
      application/x-javascript
      application/json
      application/xml
      application/xml+rss
      application/xhtml+xml
      application/x-font-ttf
      application/x-font-opentype
      image/png
      image/svg+xml
      image/x-icon
  gzip_buffers: "16 8k"
  gzip_min_length: 128
nginx_enable_default_server: false
nginx_flavor: ""

# Nginx Letsencrypt bindings
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem
